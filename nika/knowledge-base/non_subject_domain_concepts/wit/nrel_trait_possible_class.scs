nrel_trait_possible_class => nrel_main_idtf: [возможный класс признака Wit.ai*] (* <- lang_ru;; *);;
nrel_trait_possible_class => nrel_main_idtf: [Wit.ai trait possible class*] (* <- lang_en;; *);;

d_nrel_trait_possible_class <- definition;;

d_nrel_trait_possible_class => nrel_main_idtf: [Опр.(возможный класс признака Wit.ai*)] (* <- lang_ru;; *);;
d_nrel_trait_possible_class => nrel_main_idtf: [Def.(Wit.ai trait possible class*)] (* <- lang_en;; *);;
 
d_nrel_trait_possible_class -> rrel_key_sc_element: nrel_trait_possible_class;;
d_nrel_trait_possible_class <= nrel_sc_text_translation: 
	...
	(*
	-> rrel_example: 
		[Возможный класс признака Wit.ai* - отношение, связывающее признак Wit.ai с соответствующим классом.]
		(* <- lang_ru;; *);;
	*);
	...
	(*
	-> rrel_example:
		[A Wit.ai trait possible class* is a relation that connects a Wit.ai trait with the corresponding class.]
		(* <- lang_en;; *);;
	*);;

d_nrel_trait_possible_class <= nrel_using_constants:
	{
	relation;
	nrel_idtf
	};;	


nrel_trait_possible_class => nrel_first_domain: wit_trait;;
	
nrel_trait_possible_class => nrel_second_domain: sc_element;;

nrel_trait_possible_class => nrel_definitional_domain: 
	... 
	(*
	<= nrel_combination: 
		{
		sc_element;
		sc_link
		};;
	*);;	

nrel_trait_possible_class <- relation;;
nrel_trait_possible_class <- binary_relation;;
nrel_trait_possible_class <- oriented_relation;;
nrel_trait_possible_class <- antireflexive_relation;;
nrel_trait_possible_class <- asymmetric_relation;;
nrel_trait_possible_class <- antitransitive_relation;;
